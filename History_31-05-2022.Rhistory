lu<- pivot_wider(landcover, names_from = USE, values_from = land)
landcover_park <- as.data.frame(lu)
#Rename of the codes (numbers) with the names of the days
#Land cover categories that are reduced
names(landcover_park)[names(landcover_park)=="100"] <- "Building area"
names(landcover_park)[names(landcover_park)=="120"] <- "Traffic and transportation surface"
names(landcover_park)[names(landcover_park)=="140"] <- "Special settlement areas"
names(landcover_park)[names(landcover_park)=="160"] <- "Recreation and green spaces"
#Land cover categories that are considered for the analysis
names(landcover_park)[names(landcover_park)=="200"] <- "Fruit growing, viticulture, horticulture"
names(landcover_park)[names(landcover_park)=="220"] <- "Arable and Forage Cultivation"
names(landcover_park)[names(landcover_park)=="240"] <- "Alpine farming"
names(landcover_park)[names(landcover_park)=="300"] <- "Forest"
names(landcover_park)[names(landcover_park)=="400"] <- "Lakes and rivers"
names(landcover_park)[names(landcover_park)=="420"] <- "Unproductives"
#Display of the table with a better format
kbl(landcover_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
area <- ddbb %>%
group_by(PARK, km2) %>%
summarise(flickr_feature = n())
#Counting the total area of parks
area <- area %>%
group_by(PARK) %>%
summarise(km = round(sum(km2),2))
#The total area of parks:
area %>%
summarize(area = sum(km))#km2
summary(area)
photos <- ddbb %>%
group_by(PARK) %>%
summarise(photo = n()) %>%
mutate(ratio_photos= round((photo / sum(photo))*100, 3)) %>%
arrange(desc(ratio_photos))
#The total number of pictures is:
ddbb %>%
summarize(count =  n())#pictures
summary(photos)
users_flickr <- ddbb %>%
group_by(PARK, USER) %>%
summarise(user_photos =  n())
#Counting the total area of parks
users_flickr <- users_flickr %>%
group_by(PARK) %>%
summarise(user = n())%>%
mutate(ratio_users= round((user / sum(user))*100, 3)) %>%
arrange(desc(ratio_users))
#The total area of parks:
users_flickr %>%
summarize(users = sum(user))#users
summary(users_flickr)
general <- data.frame("Parks"= area$PARK, "km"= area$km, "Photos"= photos$photo, "Photos_per"= photos$ratio_photos, "Photos_km"=round((photos$photo/area$km),2),"Users"=users_flickr$user, "Users_per"=users_flickr$ratio_users, "Users_km"=round((users_flickr$user/area$km),2))
kbl(general)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
write.csv(general,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\General.csv", row.names = FALSE)
ddbb$DATE <- as.Date(ddbb$DATE)
ddbb$YEAR <- format(ddbb$DATE, format="%Y")
#Calculation of statistics per year
year_photo <- ddbb %>%
group_by(PARK, YEAR, USER)%>%
summarise(photo_yearly = n())
yearly_counts <- year_photo %>%
group_by(PARK, YEAR)%>%
summarise(VISITS = n())
ggplot(data = yearly_counts, aes(x = YEAR, y = VISITS, group = 1)) +
geom_line() +
facet_wrap(vars(PARK), labeller = label_wrap_gen(width=24))+
theme_bw()+
theme(axis.text.x = element_text(colour = "grey20", size = 7, angle = 90, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 7),
strip.text = element_text(face = "italic"),
text = element_text(size = 12))
general <- data.frame("Parks"= area$PARK, "km"= area$km, "Photos"= photos$photo, "Photos_per"= photos$ratio_photos, "Photos_km"=round((photos$photo/area$km),2),"Users"=users_flickr$user, "Users_per"=users_flickr$ratio_users, "Users_km"=round((users_flickr$user/area$km),2))
kbl(general)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
write.csv(general,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\General.csv", row.names = FALSE)
ddbb$DATE <- as.Date(ddbb$DATE)
ddbb$YEAR <- format(ddbb$DATE, format="%Y")
#Calculation of statistics per year
year_photo <- ddbb %>%
group_by(PARK, YEAR, USER)%>%
summarise(photo_yearly = n())
yearly_counts <- year_photo %>%
group_by(PARK, YEAR)%>%
summarise(VISITS = n())
ggplot(data = yearly_counts, aes(x = YEAR, y = VISITS, group = 1)) +
geom_line() +
facet_wrap(vars(PARK), labeller = label_wrap_gen(width=24))+
theme_bw()+
theme(axis.text.x = element_text(colour = "grey20", size = 7, angle = 90, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 7),
strip.text = element_text(face = "italic"),
text = element_text(size = 12))
#Creating season column
#create dates variable for your column that contains dates
dates <- ddbb$DATE
#get the month of the date, create new column called month
ddbb$month<-(month(dates, label=TRUE))
ddbb$SEASON <- ifelse(ddbb$month %in% c('May','Jun','Jul'), "SUMMER",
ifelse (ddbb$month %in% c('Aug','Sep','Oct'), "AUTUMN",
ifelse (ddbb$month %in% c('Nove','Dec','Jan'),
"WINTER", "SPRING")))
#Calculation of statistics per Season
season <- ddbb %>%
group_by(PARK, SEASON, USER)%>%
summarise(visit_season = n())
#Counting the number of users per park in each season
season <- season %>%
group_by(PARK, SEASON) %>%
summarise(season_users = n())
sp<- pivot_wider(season, names_from = SEASON, values_from = season_users)
season_park <- data.frame(sp)
#Display of the table with a better format
kbl(season_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
#Stacked normalized horizontal bar graph
season_park %>% pivot_longer(-PARK) %>%
ggplot(aes(x = factor(PARK), y = value, fill = name, group = name))+
geom_bar(stat='identity', color='white', position='fill')+
scale_y_continuous(labels = scales::percent)+
scale_fill_manual(values=c("#ed7c31", "#00b04f", "#ffbf00","#00b0f0"))+
theme(legend.position = 'bottom',
panel.grid.minor = element_blank(),
panel.border = element_blank(),
plot.title = element_text(hjust=0.5))+
coord_flip() +
xlab('Swiss National Parks') + ylab('% visitors') +
labs( fill = "SEASONS")+
ggtitle('Proportion of visitors per Season')
ddbb$DAY <- weekdays(as.Date(ddbb$DATE))
ddbb$DAY <- factor(ddbb$DAY, levels = c("Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"))
#
photoUser_day <- ddbb %>%
group_by(PARK, DAY, USER)%>%
summarise(photo_day = n())
#Counting the number of users per park in each season
daily <- photoUser_day %>%
group_by(PARK, DAY) %>%
summarise(visit_day = n())
sd<- pivot_wider(daily, names_from = DAY, values_from = visit_day)
daily_park <- as.data.frame(sd)
#Display of the table with a better format
kbl(daily_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
# Chunk options
knitr::opts_chunk$set(
fig.width = 10,
fig.asp = 0.9,
out.width = "100%"
)
theme_base <- function(base_size = 14) {
theme_bw(base_size = base_size) %+replace%
theme(
legend.position = 'top',
legend.background = element_rect(fill = "transparent", colour = NA),
legend.key = element_rect(fill = "transparent", colour = NA),
plot.title = element_text(hjust=0.5, face = 'bold'),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(color = "black", arrow = arrow(length = unit(0.1, "lines"), type = "closed")),
axis.text.x = element_text(angle = 90, vjust = 0.15, hjust=0.15, size = 10),
axis.text.y = element_text(size = 10),
strip.background = element_rect(fill = "#17252D", color = "#17252D"),
strip.text = element_text(size = rel(0.5), face = "bold", color = "white", margin = margin(5,0,5,0))
)
}
#Horizontal bar chart of daily number of visitors per Park
daily_park %>%
pivot_longer(-PARK)  %>%
ggplot(aes(x = factor(PARK), y = value, fill = name, group = name)) +
geom_bar(position="dodge", stat="identity", color='white', width = 0.8)+
scale_fill_manual(values=c("#2980b9", "#27ae60", "#f39c12","#d35400", "#5dade2","#2ecc71","#76d7c4"))+
theme_base()+
scale_x_discrete(labels = function(x) str_wrap(x, width = 22))+
xlab('Swiss National Parks') + ylab('Number of visitors') +
labs( fill = "DAY")+
ggtitle('Daily number of visitors')
#GRAPH OF MOSAIC PLOT OF PARKS AND DAYS
#TEST 1:
ggplot(data = photoUser_day) +
geom_mosaic(aes(x=product(DAY, PARK), fill = DAY)) +
scale_fill_manual(values=c("#27ae60","#2ecc71","#76d7c4", "#5dade2", "#2980b9", "#f39c12","#d35400"))+
labs(y = "DAYS", title=" offset = 0.01") +
theme(legend.position = "none",
axis.text.y=element_text(size = 8),
axis.ticks.y=element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 8))
#TEST 2
count <- table(photoUser_day$DAY,  photoUser_day$PARK)
mosaicplot(count, main = "Daily visitor of the Swiss National Parks",
sub = "Product of visitors",
xlab = "Days",
ylab = "Parks",
las = 1,
border = "black",
off = 10,
shade = TRUE)
#TEST 3
ggplot(daily, aes(x = PARK, y = visit_day, color = DAY)) +
geom_point() +
labs(x = "Days", y = "Visits") +
scale_color_manual(name = "Days:", values=c("#27ae60","#2ecc71","#76d7c4", "#5dade2", "#2980b9", "#f39c12","#d35400")) +
theme(legend.title = element_text(size = 14, face = 2),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 8))
options(dplyr.summarise.inform = FALSE)
# using subset function
flickr_04 <- as_tbl_time(flickr, index = DATE)
flickr_04 <- filter(flickr_04, DATE >= as.Date("2004-01-01"))
summary(flickr_04)
flickr_04nat <- filter(flickr_04, USE!=100, USE!=120, USE!=140, USE!=160)
summary(flickr_04nat)
#Option 1 = Application of the filter of the use, only natural land cover
db <- flickr_04nat
ddbb <- db
#Option 2 = No application of the filter of the use, all land cover types
#ddbb <- flickr_04
#Option 3 = Using all dataset with no filters (after 2004 and land cover)
#ddbb <- flickr
landcover <- flickr_04 %>%
group_by(PARK, USE, USER)%>%
summarise(land_user = n())
#Counting the number of users per park in each season
landcover <- landcover %>%
group_by(PARK, USE) %>%
summarise(land = n())
lu<- pivot_wider(landcover, names_from = USE, values_from = land)
landcover_park <- as.data.frame(lu)
#Rename of the codes (numbers) with the names of the days
#Land cover categories that are reduced
names(landcover_park)[names(landcover_park)=="100"] <- "Building area"
names(landcover_park)[names(landcover_park)=="120"] <- "Traffic and transportation surface"
names(landcover_park)[names(landcover_park)=="140"] <- "Special settlement areas"
names(landcover_park)[names(landcover_park)=="160"] <- "Recreation and green spaces"
#Land cover categories that are considered for the analysis
names(landcover_park)[names(landcover_park)=="200"] <- "Fruit growing, viticulture, horticulture"
names(landcover_park)[names(landcover_park)=="220"] <- "Arable and Forage Cultivation"
names(landcover_park)[names(landcover_park)=="240"] <- "Alpine farming"
names(landcover_park)[names(landcover_park)=="300"] <- "Forest"
names(landcover_park)[names(landcover_park)=="400"] <- "Lakes and rivers"
names(landcover_park)[names(landcover_park)=="420"] <- "Unproductives"
#Display of the table with a better format
kbl(landcover_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
landcover <- flickr_04 %>%
group_by(PARK, USE, USER)%>%
summarise(land_user = n())
#Counting the number of users per park in each season
landcover <- landcover %>%
group_by(PARK, USE) %>%
summarise(land = n())
lu<- pivot_wider(landcover, names_from = USE, values_from = land)
landcover_park <- as.data.frame(lu)
#Rename of the codes (numbers) with the names of the days
#Land cover categories that are reduced
names(landcover_park)[names(landcover_park)=="100"] <- "Building area"
names(landcover_park)[names(landcover_park)=="120"] <- "Traffic and transportation surface"
names(landcover_park)[names(landcover_park)=="140"] <- "Special settlement areas"
names(landcover_park)[names(landcover_park)=="160"] <- "Recreation and green spaces"
#Land cover categories that are considered for the analysis
names(landcover_park)[names(landcover_park)=="200"] <- "Fruit growing, viticulture, horticulture"
names(landcover_park)[names(landcover_park)=="220"] <- "Arable and Forage Cultivation"
names(landcover_park)[names(landcover_park)=="240"] <- "Alpine farming"
names(landcover_park)[names(landcover_park)=="300"] <- "Forest"
names(landcover_park)[names(landcover_park)=="400"] <- "Lakes and rivers"
names(landcover_park)[names(landcover_park)=="420"] <- "Unproductives"
write.csv(landcover_park,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\LandCover.csv", row.names = FALSE)
#Display of the table with a better format
kbl(landcover_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
ddbb$DATE <- as.Date(ddbb$DATE)
ddbb$YEAR <- format(ddbb$DATE, format="%Y")
#Calculation of statistics per year
year_photo <- ddbb %>%
group_by(PARK, YEAR, USER)%>%
summarise(photo_yearly = n())
yearly_counts <- year_photo %>%
group_by(PARK, YEAR)%>%
summarise(VISITS = n())
global_trend <- ggplot(data = yearly_counts, aes(x = YEAR, y = VISITS, group = 1)) +
geom_line() +
facet_wrap(vars(PARK), labeller = label_wrap_gen(width=24))+
theme_bw()+
theme(axis.text.x = element_text(colour = "grey20", size = 7, angle = 90, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 7),
strip.text = element_text(face = "italic"),
text = element_text(size = 12))
global_trend
png(global_trend,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\global_trend.png")
ddbb$DATE <- as.Date(ddbb$DATE)
ddbb$YEAR <- format(ddbb$DATE, format="%Y")
#Calculation of statistics per year
year_photo <- ddbb %>%
group_by(PARK, YEAR, USER)%>%
summarise(photo_yearly = n())
yearly_counts <- year_photo %>%
group_by(PARK, YEAR)%>%
summarise(VISITS = n())
png("C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\general_trend.png")
ggplot(data = yearly_counts, aes(x = YEAR, y = VISITS, group = 1)) +
geom_line() +
facet_wrap(vars(PARK), labeller = label_wrap_gen(width=24))+
theme_bw()+
theme(axis.text.x = element_text(colour = "grey20", size = 7, angle = 90, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 7),
strip.text = element_text(face = "italic"),
text = element_text(size = 12))
dev.off
ddbb$DATE <- as.Date(ddbb$DATE)
ddbb$YEAR <- format(ddbb$DATE, format="%Y")
#Calculation of statistics per year
year_photo <- ddbb %>%
group_by(PARK, YEAR, USER)%>%
summarise(photo_yearly = n())
yearly_counts <- year_photo %>%
group_by(PARK, YEAR)%>%
summarise(VISITS = n())
png("C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\general_trend.png")
ggplot(data = yearly_counts, aes(x = YEAR, y = VISITS, group = 1)) +
geom_line() +
facet_wrap(vars(PARK), labeller = label_wrap_gen(width=24))+
theme_bw()+
theme(axis.text.x = element_text(colour = "grey20", size = 6, angle = 90, hjust = 0.5, vjust = 0.5),
axis.text.y = element_text(colour = "grey20", size = 6),
strip.text = element_text(face = "italic"),
text = element_text(size = 10))
dev.off
landcover <- flickr_04 %>%
group_by(PARK, USE, USER)%>%
summarise(land_user = n())
#Counting the number of users per park in each season
landcover <- landcover %>%
group_by(PARK, USE) %>%
summarise(land = n())
lu<- pivot_wider(landcover, names_from = USE, values_from = land)
landcover_park <- as.data.frame(lu)
#Rename of the codes (numbers) with the names of the days
#Land cover categories that are reduced
names(landcover_park)[names(landcover_park)=="100"] <- "Building area"
names(landcover_park)[names(landcover_park)=="120"] <- "Traffic and transportation surface"
names(landcover_park)[names(landcover_park)=="140"] <- "Special settlement areas"
names(landcover_park)[names(landcover_park)=="160"] <- "Recreation and green spaces"
#Land cover categories that are considered for the analysis
names(landcover_park)[names(landcover_park)=="200"] <- "Fruit growing, viticulture, horticulture"
names(landcover_park)[names(landcover_park)=="220"] <- "Arable and Forage Cultivation"
names(landcover_park)[names(landcover_park)=="240"] <- "Alpine farming"
names(landcover_park)[names(landcover_park)=="300"] <- "Forest"
names(landcover_park)[names(landcover_park)=="400"] <- "Lakes and rivers"
names(landcover_park)[names(landcover_park)=="420"] <- "Unproductives"
write.csv(landcover_park,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\LandCover.csv", row.names = FALSE)
#Display of the table with a better format
kbl(landcover_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
#Option 1 = Application of the filter of the use, only natural land cover
db <- flickr_04nat
ddbb <- db
#Option 2 = No application of the filter of the use, all land cover types
#ddbb <- flickr_04
#Option 3 = Using all dataset with no filters (after 2004 and land cover)
#ddbb <- flickr
flickr_04nat <- filter(flickr_04, USE!=100, USE!=120, USE!=140, USE!=160)
summary(flickr_04nat)
# using subset function
flickr_04 <- as_tbl_time(flickr, index = DATE)
flickr_04 <- filter(flickr_04, DATE >= as.Date("2004-01-01"))
summary(flickr_04)
#Data source
flickr <- read_xlsx(here("Flickr_Data.xlsx"), col_types = c("numeric", "text", "numeric",
"numeric", "text", "date", "numeric",
"text", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text"))# explore data
summary(flickr)
# Chunk options
knitr::opts_chunk$set(
fig.width = 10,
fig.asp = 0.9,
out.width = "95%"
)
#PACKAGES
#install.packages("tidyverse")
#install.packages("magrittr")
#install.packages("dplyr")
#install.packages("readxl")
#install.packages("here")
#install.packages("skimr")
#install.packages("kableExtra")
#install.packages("knitr")
#install.packages(magrittr)
#install.packages(lubridate)
#install.packages("stringr")
#install.packages("tibbletime")
#install.packages("ggmosaic")
#install.packages("scales")
#Libraries
library(tidyverse)
library(magrittr)
library(dplyr)
library(readxl)
library(here)
library(skimr)
library(kableExtra)
library(knitr)
library(magrittr)
library(lubridate)
library(ggplot2)
library(stringr)
library(tibbletime)
library(ggmosaic)
library(scales)
#Data source
flickr <- read_xlsx(here("Flickr_Data.xlsx"), col_types = c("numeric", "text", "numeric",
"numeric", "text", "date", "numeric",
"text", "numeric", "text", "text",
"text", "text", "text", "text", "text",
"text"))# explore data
summary(flickr)
options(dplyr.summarise.inform = FALSE)
options(dplyr.summarise.inform = FALSE)
# using subset function
flickr_04 <- as_tbl_time(flickr, index = DATE)
flickr_04 <- filter(flickr_04, DATE >= as.Date("2004-01-01"))
summary(flickr_04)
flickr_04nat <- filter(flickr_04, USE!=100, USE!=120, USE!=140, USE!=160)
summary(flickr_04nat)
#Option 1 = Application of the filter of the use, only natural land cover
db <- flickr_04nat
ddbb <- db
#Option 2 = No application of the filter of the use, all land cover types
#ddbb <- flickr_04
#Option 3 = Using all dataset with no filters (after 2004 and land cover)
#ddbb <- flickr
landcover <- flickr_04 %>%
group_by(PARK, USE, USER)%>%
summarise(land_user = n())
#Counting the number of users per park in each season
landcover <- landcover %>%
group_by(PARK, USE) %>%
summarise(land = n())
lu<- pivot_wider(landcover, names_from = USE, values_from = land)
landcover_park <- as.data.frame(lu)
#Rename of the codes (numbers) with the names of the days
#Land cover categories that are reduced
names(landcover_park)[names(landcover_park)=="100"] <- "Building area"
names(landcover_park)[names(landcover_park)=="120"] <- "Traffic and transportation surface"
names(landcover_park)[names(landcover_park)=="140"] <- "Special settlement areas"
names(landcover_park)[names(landcover_park)=="160"] <- "Recreation and green spaces"
#Land cover categories that are considered for the analysis
names(landcover_park)[names(landcover_park)=="200"] <- "Fruit growing, viticulture, horticulture"
names(landcover_park)[names(landcover_park)=="220"] <- "Arable and Forage Cultivation"
names(landcover_park)[names(landcover_park)=="240"] <- "Alpine farming"
names(landcover_park)[names(landcover_park)=="300"] <- "Forest"
names(landcover_park)[names(landcover_park)=="400"] <- "Lakes and rivers"
names(landcover_park)[names(landcover_park)=="420"] <- "Unproductives"
landcover_park <- landcover_park %>% arrange(PARK)
write.csv(landcover_park,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\LandCover.csv", row.names = FALSE)
#Display of the table with a better format
kbl(landcover_park)%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
area <- ddbb %>%
group_by(PARK, km2) %>%
summarise(flickr_feature = n())
#Counting the total area of parks
area <- area %>%
group_by(PARK) %>%
summarise(km = round(sum(km2),2))
#The total area of parks:
area %>%
summarize(area = sum(km))#km2
summary(area)
photos <- ddbb %>%
group_by(PARK) %>%
summarise(photo = n()) %>%
mutate(ratio_photos= round((photo / sum(photo))*100, 3)) %>%
arrange(desc(ratio_photos))
#The total number of pictures is:
ddbb %>%
summarize(count =  n())#pictures
summary(photos)
users_flickr <- ddbb %>%
group_by(PARK, USER) %>%
summarise(user_photos =  n())
#Counting the total area of parks
users_flickr <- users_flickr %>%
group_by(PARK) %>%
summarise(user = n())%>%
mutate(ratio_users= round((user / sum(user))*100, 3)) %>%
arrange(desc(ratio_users))
#The total area of parks:
users_flickr %>%
summarize(users = sum(user))#users
summary(users_flickr)
general <- data.frame("Parks"= area$PARK, "km"= area$km, "Photos"= photos$photo, "Photos_per"= photos$ratio_photos, "Photos_km"=round((photos$photo/area$km),2),"Users"=users_flickr$user, "Users_per"=users_flickr$ratio_users, "Users_km"=round((users_flickr$user/area$km),2))
general <- general %>% arrange(Parks)
kbl(general) %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
write.csv(general,"C:\\Users\\dmarinoc\\Documents\\GitHub\\Flickr_SwissParks\\General.csv", row.names = FALSE)
contrib <- ddbb %>%
group_by(USER)%>%
summarise(photo = n())
contrib_r <-contrib
contrib_r %>% group_by(USER) %>%
summarize(first=quantile(photo,probs=0.10),
second=quantile(photo,probs=0.25),
third=quantile(photo,probs=0.50),
fourd=quantile(photo,probs=0.75),
fifth=quantile(photo,probs=0.95))
ggp1 <- ggplot(contrib, aes(x = n/sum(n))) +    # Draw each column as histogram
geom_histogram() +
facet_wrap(~ USER, scales = "free")
ggp1
gc()
savehistory("~/GitHub/Flickr_SwissParks/History_31-05-2022.Rhistory")
